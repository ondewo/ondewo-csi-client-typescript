// source: ondewo/csi/conversation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_rpc_status_pb = require('../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var ondewo_nlu_session_pb = require('../../ondewo/nlu/session_pb.js');
goog.object.extend(proto, ondewo_nlu_session_pb);
var ondewo_t2s_text$to$speech_pb = require('../../ondewo/t2s/text-to-speech_pb.js');
goog.object.extend(proto, ondewo_t2s_text$to$speech_pb);
var ondewo_s2t_speech$to$text_pb = require('../../ondewo/s2t/speech-to-text_pb.js');
goog.object.extend(proto, ondewo_s2t_speech$to$text_pb);
var ondewo_nlu_context_pb = require('../../ondewo/nlu/context_pb.js');
goog.object.extend(proto, ondewo_nlu_context_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.ondewo.csi.CheckUpstreamHealthResponse', null, global);
goog.exportSymbol('proto.ondewo.csi.Condition', null, global);
goog.exportSymbol('proto.ondewo.csi.ConditionType', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlMessage', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlMessageServiceMethod', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlMessageServiceName', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlMessageServiceParameters', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlMessageServiceParameters.ConfigCase', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlStatus', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlStreamRequest', null, global);
goog.exportSymbol('proto.ondewo.csi.ControlStreamResponse', null, global);
goog.exportSymbol('proto.ondewo.csi.ListS2sPipelinesRequest', null, global);
goog.exportSymbol('proto.ondewo.csi.ListS2sPipelinesResponse', null, global);
goog.exportSymbol('proto.ondewo.csi.S2sPipeline', null, global);
goog.exportSymbol('proto.ondewo.csi.S2sPipelineId', null, global);
goog.exportSymbol('proto.ondewo.csi.S2sStreamRequest', null, global);
goog.exportSymbol('proto.ondewo.csi.S2sStreamResponse', null, global);
goog.exportSymbol('proto.ondewo.csi.S2sStreamResponse.ResponseCase', null, global);
goog.exportSymbol('proto.ondewo.csi.SetControlStatusRequest', null, global);
goog.exportSymbol('proto.ondewo.csi.SetControlStatusResponse', null, global);
goog.exportSymbol('proto.ondewo.csi.SipTrigger', null, global);
goog.exportSymbol('proto.ondewo.csi.SipTrigger.SipTriggerType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.S2sPipeline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.S2sPipeline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.S2sPipeline.displayName = 'proto.ondewo.csi.S2sPipeline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.S2sPipelineId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.S2sPipelineId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.S2sPipelineId.displayName = 'proto.ondewo.csi.S2sPipelineId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ListS2sPipelinesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.ListS2sPipelinesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ListS2sPipelinesRequest.displayName = 'proto.ondewo.csi.ListS2sPipelinesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ListS2sPipelinesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.csi.ListS2sPipelinesResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.csi.ListS2sPipelinesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ListS2sPipelinesResponse.displayName = 'proto.ondewo.csi.ListS2sPipelinesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.S2sStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.S2sStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.S2sStreamRequest.displayName = 'proto.ondewo.csi.S2sStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.S2sStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ondewo.csi.S2sStreamResponse.oneofGroups_);
};
goog.inherits(proto.ondewo.csi.S2sStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.S2sStreamResponse.displayName = 'proto.ondewo.csi.S2sStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.SipTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.SipTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.SipTrigger.displayName = 'proto.ondewo.csi.SipTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.CheckUpstreamHealthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.CheckUpstreamHealthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.CheckUpstreamHealthResponse.displayName = 'proto.ondewo.csi.CheckUpstreamHealthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ControlStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.ControlStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ControlStreamRequest.displayName = 'proto.ondewo.csi.ControlStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ControlStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.ControlStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ControlStreamResponse.displayName = 'proto.ondewo.csi.ControlStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.SetControlStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.SetControlStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.SetControlStatusRequest.displayName = 'proto.ondewo.csi.SetControlStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.SetControlStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.SetControlStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.SetControlStatusResponse.displayName = 'proto.ondewo.csi.SetControlStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.Condition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.Condition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.Condition.displayName = 'proto.ondewo.csi.Condition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ControlMessageServiceParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.csi.ControlMessageServiceParameters.repeatedFields_, proto.ondewo.csi.ControlMessageServiceParameters.oneofGroups_);
};
goog.inherits(proto.ondewo.csi.ControlMessageServiceParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ControlMessageServiceParameters.displayName = 'proto.ondewo.csi.ControlMessageServiceParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.csi.ControlMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.csi.ControlMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.csi.ControlMessage.displayName = 'proto.ondewo.csi.ControlMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.S2sPipeline.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.S2sPipeline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.S2sPipeline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sPipeline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    s2tPipelineId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nluProjectId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nluLanguageCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    t2sPipelineId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.S2sPipeline}
 */
proto.ondewo.csi.S2sPipeline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.S2sPipeline;
  return proto.ondewo.csi.S2sPipeline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.S2sPipeline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.S2sPipeline}
 */
proto.ondewo.csi.S2sPipeline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setS2tPipelineId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNluProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNluLanguageCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setT2sPipelineId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.S2sPipeline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.S2sPipeline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.S2sPipeline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sPipeline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getS2tPipelineId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNluProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNluLanguageCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getT2sPipelineId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ondewo.csi.S2sPipeline.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipeline} returns this
 */
proto.ondewo.csi.S2sPipeline.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string s2t_pipeline_id = 2;
 * @return {string}
 */
proto.ondewo.csi.S2sPipeline.prototype.getS2tPipelineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipeline} returns this
 */
proto.ondewo.csi.S2sPipeline.prototype.setS2tPipelineId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nlu_project_id = 3;
 * @return {string}
 */
proto.ondewo.csi.S2sPipeline.prototype.getNluProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipeline} returns this
 */
proto.ondewo.csi.S2sPipeline.prototype.setNluProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string nlu_language_code = 4;
 * @return {string}
 */
proto.ondewo.csi.S2sPipeline.prototype.getNluLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipeline} returns this
 */
proto.ondewo.csi.S2sPipeline.prototype.setNluLanguageCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string t2s_pipeline_id = 5;
 * @return {string}
 */
proto.ondewo.csi.S2sPipeline.prototype.getT2sPipelineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipeline} returns this
 */
proto.ondewo.csi.S2sPipeline.prototype.setT2sPipelineId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.S2sPipelineId.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.S2sPipelineId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.S2sPipelineId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sPipelineId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.S2sPipelineId}
 */
proto.ondewo.csi.S2sPipelineId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.S2sPipelineId;
  return proto.ondewo.csi.S2sPipelineId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.S2sPipelineId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.S2sPipelineId}
 */
proto.ondewo.csi.S2sPipelineId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.S2sPipelineId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.S2sPipelineId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.S2sPipelineId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sPipelineId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ondewo.csi.S2sPipelineId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sPipelineId} returns this
 */
proto.ondewo.csi.S2sPipelineId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ListS2sPipelinesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ListS2sPipelinesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ListS2sPipelinesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ListS2sPipelinesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ListS2sPipelinesRequest}
 */
proto.ondewo.csi.ListS2sPipelinesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ListS2sPipelinesRequest;
  return proto.ondewo.csi.ListS2sPipelinesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ListS2sPipelinesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ListS2sPipelinesRequest}
 */
proto.ondewo.csi.ListS2sPipelinesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ListS2sPipelinesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ListS2sPipelinesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ListS2sPipelinesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ListS2sPipelinesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.csi.ListS2sPipelinesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ListS2sPipelinesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ListS2sPipelinesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ListS2sPipelinesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelinesList: jspb.Message.toObjectList(msg.getPipelinesList(),
    proto.ondewo.csi.S2sPipeline.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ListS2sPipelinesResponse}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ListS2sPipelinesResponse;
  return proto.ondewo.csi.ListS2sPipelinesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ListS2sPipelinesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ListS2sPipelinesResponse}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ondewo.csi.S2sPipeline;
      reader.readMessage(value,proto.ondewo.csi.S2sPipeline.deserializeBinaryFromReader);
      msg.addPipelines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ListS2sPipelinesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ListS2sPipelinesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ListS2sPipelinesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ondewo.csi.S2sPipeline.serializeBinaryToWriter
    );
  }
};


/**
 * repeated S2sPipeline pipelines = 1;
 * @return {!Array<!proto.ondewo.csi.S2sPipeline>}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.getPipelinesList = function() {
  return /** @type{!Array<!proto.ondewo.csi.S2sPipeline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ondewo.csi.S2sPipeline, 1));
};


/**
 * @param {!Array<!proto.ondewo.csi.S2sPipeline>} value
 * @return {!proto.ondewo.csi.ListS2sPipelinesResponse} returns this
*/
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.setPipelinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ondewo.csi.S2sPipeline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.csi.S2sPipeline}
 */
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.addPipelines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ondewo.csi.S2sPipeline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.csi.ListS2sPipelinesResponse} returns this
 */
proto.ondewo.csi.ListS2sPipelinesResponse.prototype.clearPipelinesList = function() {
  return this.setPipelinesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.S2sStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.S2sStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelineId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    audio: msg.getAudio_asB64(),
    endOfStream: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    initialIntentDisplayName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.S2sStreamRequest}
 */
proto.ondewo.csi.S2sStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.S2sStreamRequest;
  return proto.ondewo.csi.S2sStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.S2sStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.S2sStreamRequest}
 */
proto.ondewo.csi.S2sStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPipelineId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudio(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndOfStream(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialIntentDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.S2sStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.S2sStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelineId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAudio_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getEndOfStream();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getInitialIntentDisplayName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string pipeline_id = 1;
 * @return {string}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getPipelineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sStreamRequest} returns this
 */
proto.ondewo.csi.S2sStreamRequest.prototype.setPipelineId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sStreamRequest} returns this
 */
proto.ondewo.csi.S2sStreamRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes audio = 3;
 * @return {!(string|Uint8Array)}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getAudio = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes audio = 3;
 * This is a type-conversion wrapper around `getAudio()`
 * @return {string}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getAudio_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudio()));
};


/**
 * optional bytes audio = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudio()`
 * @return {!Uint8Array}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getAudio_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudio()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ondewo.csi.S2sStreamRequest} returns this
 */
proto.ondewo.csi.S2sStreamRequest.prototype.setAudio = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool end_of_stream = 4;
 * @return {boolean}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getEndOfStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.csi.S2sStreamRequest} returns this
 */
proto.ondewo.csi.S2sStreamRequest.prototype.setEndOfStream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string initial_intent_display_name = 5;
 * @return {string}
 */
proto.ondewo.csi.S2sStreamRequest.prototype.getInitialIntentDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.S2sStreamRequest} returns this
 */
proto.ondewo.csi.S2sStreamRequest.prototype.setInitialIntentDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ondewo.csi.S2sStreamResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.ondewo.csi.S2sStreamResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DETECT_INTENT_RESPONSE: 1,
  SYNTHESIZE_RESPONSE: 2,
  SIP_TRIGGER: 3
};

/**
 * @return {proto.ondewo.csi.S2sStreamResponse.ResponseCase}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.getResponseCase = function() {
  return /** @type {proto.ondewo.csi.S2sStreamResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.ondewo.csi.S2sStreamResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.S2sStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.S2sStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    detectIntentResponse: (f = msg.getDetectIntentResponse()) && ondewo_nlu_session_pb.DetectIntentResponse.toObject(includeInstance, f),
    synthesizeResponse: (f = msg.getSynthesizeResponse()) && ondewo_t2s_text$to$speech_pb.SynthesizeResponse.toObject(includeInstance, f),
    sipTrigger: (f = msg.getSipTrigger()) && proto.ondewo.csi.SipTrigger.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.S2sStreamResponse}
 */
proto.ondewo.csi.S2sStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.S2sStreamResponse;
  return proto.ondewo.csi.S2sStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.S2sStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.S2sStreamResponse}
 */
proto.ondewo.csi.S2sStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ondewo_nlu_session_pb.DetectIntentResponse;
      reader.readMessage(value,ondewo_nlu_session_pb.DetectIntentResponse.deserializeBinaryFromReader);
      msg.setDetectIntentResponse(value);
      break;
    case 2:
      var value = new ondewo_t2s_text$to$speech_pb.SynthesizeResponse;
      reader.readMessage(value,ondewo_t2s_text$to$speech_pb.SynthesizeResponse.deserializeBinaryFromReader);
      msg.setSynthesizeResponse(value);
      break;
    case 3:
      var value = new proto.ondewo.csi.SipTrigger;
      reader.readMessage(value,proto.ondewo.csi.SipTrigger.deserializeBinaryFromReader);
      msg.setSipTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.S2sStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.S2sStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.S2sStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetectIntentResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ondewo_nlu_session_pb.DetectIntentResponse.serializeBinaryToWriter
    );
  }
  f = message.getSynthesizeResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ondewo_t2s_text$to$speech_pb.SynthesizeResponse.serializeBinaryToWriter
    );
  }
  f = message.getSipTrigger();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ondewo.csi.SipTrigger.serializeBinaryToWriter
    );
  }
};


/**
 * optional ondewo.nlu.DetectIntentResponse detect_intent_response = 1;
 * @return {?proto.ondewo.nlu.DetectIntentResponse}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.getDetectIntentResponse = function() {
  return /** @type{?proto.ondewo.nlu.DetectIntentResponse} */ (
    jspb.Message.getWrapperField(this, ondewo_nlu_session_pb.DetectIntentResponse, 1));
};


/**
 * @param {?proto.ondewo.nlu.DetectIntentResponse|undefined} value
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
*/
proto.ondewo.csi.S2sStreamResponse.prototype.setDetectIntentResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ondewo.csi.S2sStreamResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
 */
proto.ondewo.csi.S2sStreamResponse.prototype.clearDetectIntentResponse = function() {
  return this.setDetectIntentResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.hasDetectIntentResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ondewo.t2s.SynthesizeResponse synthesize_response = 2;
 * @return {?proto.ondewo.t2s.SynthesizeResponse}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.getSynthesizeResponse = function() {
  return /** @type{?proto.ondewo.t2s.SynthesizeResponse} */ (
    jspb.Message.getWrapperField(this, ondewo_t2s_text$to$speech_pb.SynthesizeResponse, 2));
};


/**
 * @param {?proto.ondewo.t2s.SynthesizeResponse|undefined} value
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
*/
proto.ondewo.csi.S2sStreamResponse.prototype.setSynthesizeResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ondewo.csi.S2sStreamResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
 */
proto.ondewo.csi.S2sStreamResponse.prototype.clearSynthesizeResponse = function() {
  return this.setSynthesizeResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.hasSynthesizeResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SipTrigger sip_trigger = 3;
 * @return {?proto.ondewo.csi.SipTrigger}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.getSipTrigger = function() {
  return /** @type{?proto.ondewo.csi.SipTrigger} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.csi.SipTrigger, 3));
};


/**
 * @param {?proto.ondewo.csi.SipTrigger|undefined} value
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
*/
proto.ondewo.csi.S2sStreamResponse.prototype.setSipTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ondewo.csi.S2sStreamResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.S2sStreamResponse} returns this
 */
proto.ondewo.csi.S2sStreamResponse.prototype.clearSipTrigger = function() {
  return this.setSipTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.S2sStreamResponse.prototype.hasSipTrigger = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.SipTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.SipTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.SipTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SipTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    content: (f = msg.getContent()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.SipTrigger}
 */
proto.ondewo.csi.SipTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.SipTrigger;
  return proto.ondewo.csi.SipTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.SipTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.SipTrigger}
 */
proto.ondewo.csi.SipTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.SipTrigger.SipTriggerType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.SipTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.SipTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.SipTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SipTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ondewo.csi.SipTrigger.SipTriggerType = {
  UNSPECIFIED: 0,
  HANGUP: 1,
  HUMAN_HANDOVER: 2,
  SEND_NOW: 3,
  PAUSE: 4,
  TRANSFER: 5,
  INVITE: 6,
  PLAY_AUDIO: 7
};

/**
 * optional SipTriggerType type = 1;
 * @return {!proto.ondewo.csi.SipTrigger.SipTriggerType}
 */
proto.ondewo.csi.SipTrigger.prototype.getType = function() {
  return /** @type {!proto.ondewo.csi.SipTrigger.SipTriggerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.SipTrigger.SipTriggerType} value
 * @return {!proto.ondewo.csi.SipTrigger} returns this
 */
proto.ondewo.csi.SipTrigger.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Struct content = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.ondewo.csi.SipTrigger.prototype.getContent = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.ondewo.csi.SipTrigger} returns this
*/
proto.ondewo.csi.SipTrigger.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.SipTrigger} returns this
 */
proto.ondewo.csi.SipTrigger.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.SipTrigger.prototype.hasContent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.CheckUpstreamHealthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.CheckUpstreamHealthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s2tStatus: (f = msg.getS2tStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    nluStatus: (f = msg.getNluStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    t2sStatus: (f = msg.getT2sStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.CheckUpstreamHealthResponse;
  return proto.ondewo.csi.CheckUpstreamHealthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.CheckUpstreamHealthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setS2tStatus(value);
      break;
    case 2:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setNluStatus(value);
      break;
    case 3:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setT2sStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.CheckUpstreamHealthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.CheckUpstreamHealthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS2tStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getNluStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getT2sStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status s2t_status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.getS2tStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
*/
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.setS2tStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.clearS2tStatus = function() {
  return this.setS2tStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.hasS2tStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.rpc.Status nlu_status = 2;
 * @return {?proto.google.rpc.Status}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.getNluStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 2));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
*/
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.setNluStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.clearNluStatus = function() {
  return this.setNluStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.hasNluStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.rpc.Status t2s_status = 3;
 * @return {?proto.google.rpc.Status}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.getT2sStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 3));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
*/
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.setT2sStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.CheckUpstreamHealthResponse} returns this
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.clearT2sStatus = function() {
  return this.setT2sStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.CheckUpstreamHealthResponse.prototype.hasT2sStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ControlStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ControlStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ControlStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ControlStreamRequest}
 */
proto.ondewo.csi.ControlStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ControlStreamRequest;
  return proto.ondewo.csi.ControlStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ControlStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ControlStreamRequest}
 */
proto.ondewo.csi.ControlStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ControlStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ControlStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ControlStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ControlStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ControlStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ControlStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    controlStatus: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ControlStreamResponse}
 */
proto.ondewo.csi.ControlStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ControlStreamResponse;
  return proto.ondewo.csi.ControlStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ControlStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ControlStreamResponse}
 */
proto.ondewo.csi.ControlStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.ControlStatus} */ (reader.readEnum());
      msg.setControlStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ControlStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ControlStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ControlStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getControlStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional ControlStatus control_status = 1;
 * @return {!proto.ondewo.csi.ControlStatus}
 */
proto.ondewo.csi.ControlStreamResponse.prototype.getControlStatus = function() {
  return /** @type {!proto.ondewo.csi.ControlStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlStatus} value
 * @return {!proto.ondewo.csi.ControlStreamResponse} returns this
 */
proto.ondewo.csi.ControlStreamResponse.prototype.setControlStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.SetControlStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.SetControlStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.SetControlStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SetControlStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    controlStatus: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.SetControlStatusRequest}
 */
proto.ondewo.csi.SetControlStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.SetControlStatusRequest;
  return proto.ondewo.csi.SetControlStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.SetControlStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.SetControlStatusRequest}
 */
proto.ondewo.csi.SetControlStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.ControlStatus} */ (reader.readEnum());
      msg.setControlStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.SetControlStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.SetControlStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.SetControlStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SetControlStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getControlStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional ControlStatus control_status = 1;
 * @return {!proto.ondewo.csi.ControlStatus}
 */
proto.ondewo.csi.SetControlStatusRequest.prototype.getControlStatus = function() {
  return /** @type {!proto.ondewo.csi.ControlStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlStatus} value
 * @return {!proto.ondewo.csi.SetControlStatusRequest} returns this
 */
proto.ondewo.csi.SetControlStatusRequest.prototype.setControlStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.SetControlStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.SetControlStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SetControlStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldControlStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newControlStatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.SetControlStatusResponse}
 */
proto.ondewo.csi.SetControlStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.SetControlStatusResponse;
  return proto.ondewo.csi.SetControlStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.SetControlStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.SetControlStatusResponse}
 */
proto.ondewo.csi.SetControlStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.ControlStatus} */ (reader.readEnum());
      msg.setOldControlStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.ondewo.csi.ControlStatus} */ (reader.readEnum());
      msg.setNewControlStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.SetControlStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.SetControlStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.SetControlStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldControlStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNewControlStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional ControlStatus old_control_status = 1;
 * @return {!proto.ondewo.csi.ControlStatus}
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.getOldControlStatus = function() {
  return /** @type {!proto.ondewo.csi.ControlStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlStatus} value
 * @return {!proto.ondewo.csi.SetControlStatusResponse} returns this
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.setOldControlStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ControlStatus new_control_status = 2;
 * @return {!proto.ondewo.csi.ControlStatus}
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.getNewControlStatus = function() {
  return /** @type {!proto.ondewo.csi.ControlStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlStatus} value
 * @return {!proto.ondewo.csi.SetControlStatusResponse} returns this
 */
proto.ondewo.csi.SetControlStatusResponse.prototype.setNewControlStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.Condition.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.Condition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.Condition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.Condition.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.Condition}
 */
proto.ondewo.csi.Condition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.Condition;
  return proto.ondewo.csi.Condition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.Condition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.Condition}
 */
proto.ondewo.csi.Condition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.ConditionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.Condition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.Condition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.Condition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.Condition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ConditionType type = 1;
 * @return {!proto.ondewo.csi.ConditionType}
 */
proto.ondewo.csi.Condition.prototype.getType = function() {
  return /** @type {!proto.ondewo.csi.ConditionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.ConditionType} value
 * @return {!proto.ondewo.csi.Condition} returns this
 */
proto.ondewo.csi.Condition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.ondewo.csi.Condition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.Condition} returns this
 */
proto.ondewo.csi.Condition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.csi.ControlMessageServiceParameters.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ondewo.csi.ControlMessageServiceParameters.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ondewo.csi.ControlMessageServiceParameters.ConfigCase = {
  CONFIG_NOT_SET: 0,
  T2S_CONFIG: 1,
  S2T_CONFIG: 2
};

/**
 * @return {proto.ondewo.csi.ControlMessageServiceParameters.ConfigCase}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getConfigCase = function() {
  return /** @type {proto.ondewo.csi.ControlMessageServiceParameters.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.ondewo.csi.ControlMessageServiceParameters.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ControlMessageServiceParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ControlMessageServiceParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlMessageServiceParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    t2sConfig: (f = msg.getT2sConfig()) && ondewo_t2s_text$to$speech_pb.RequestConfig.toObject(includeInstance, f),
    s2tConfig: (f = msg.getS2tConfig()) && ondewo_s2t_speech$to$text_pb.TranscribeRequestConfig.toObject(includeInstance, f),
    transferId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    wavFilesList: msg.getWavFilesList_asB64(),
    text: jspb.Message.getFieldWithDefault(msg, 5, ""),
    context: (f = msg.getContext()) && ondewo_nlu_context_pb.Context.toObject(includeInstance, f),
    sessionId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    contextName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    conditionStart: (f = msg.getConditionStart()) && proto.ondewo.csi.Condition.toObject(includeInstance, f),
    conditionEnd: (f = msg.getConditionEnd()) && proto.ondewo.csi.Condition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters}
 */
proto.ondewo.csi.ControlMessageServiceParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ControlMessageServiceParameters;
  return proto.ondewo.csi.ControlMessageServiceParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ControlMessageServiceParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters}
 */
proto.ondewo.csi.ControlMessageServiceParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ondewo_t2s_text$to$speech_pb.RequestConfig;
      reader.readMessage(value,ondewo_t2s_text$to$speech_pb.RequestConfig.deserializeBinaryFromReader);
      msg.setT2sConfig(value);
      break;
    case 2:
      var value = new ondewo_s2t_speech$to$text_pb.TranscribeRequestConfig;
      reader.readMessage(value,ondewo_s2t_speech$to$text_pb.TranscribeRequestConfig.deserializeBinaryFromReader);
      msg.setS2tConfig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addWavFiles(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 6:
      var value = new ondewo_nlu_context_pb.Context;
      reader.readMessage(value,ondewo_nlu_context_pb.Context.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextName(value);
      break;
    case 9:
      var value = new proto.ondewo.csi.Condition;
      reader.readMessage(value,proto.ondewo.csi.Condition.deserializeBinaryFromReader);
      msg.setConditionStart(value);
      break;
    case 10:
      var value = new proto.ondewo.csi.Condition;
      reader.readMessage(value,proto.ondewo.csi.Condition.deserializeBinaryFromReader);
      msg.setConditionEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ControlMessageServiceParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ControlMessageServiceParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlMessageServiceParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getT2sConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ondewo_t2s_text$to$speech_pb.RequestConfig.serializeBinaryToWriter
    );
  }
  f = message.getS2tConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ondewo_s2t_speech$to$text_pb.TranscribeRequestConfig.serializeBinaryToWriter
    );
  }
  f = message.getTransferId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWavFilesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      ondewo_nlu_context_pb.Context.serializeBinaryToWriter
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getContextName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getConditionStart();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ondewo.csi.Condition.serializeBinaryToWriter
    );
  }
  f = message.getConditionEnd();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ondewo.csi.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional ondewo.t2s.RequestConfig t2s_config = 1;
 * @return {?proto.ondewo.t2s.RequestConfig}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getT2sConfig = function() {
  return /** @type{?proto.ondewo.t2s.RequestConfig} */ (
    jspb.Message.getWrapperField(this, ondewo_t2s_text$to$speech_pb.RequestConfig, 1));
};


/**
 * @param {?proto.ondewo.t2s.RequestConfig|undefined} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
*/
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setT2sConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ondewo.csi.ControlMessageServiceParameters.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearT2sConfig = function() {
  return this.setT2sConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.hasT2sConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ondewo.s2t.TranscribeRequestConfig s2t_config = 2;
 * @return {?proto.ondewo.s2t.TranscribeRequestConfig}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getS2tConfig = function() {
  return /** @type{?proto.ondewo.s2t.TranscribeRequestConfig} */ (
    jspb.Message.getWrapperField(this, ondewo_s2t_speech$to$text_pb.TranscribeRequestConfig, 2));
};


/**
 * @param {?proto.ondewo.s2t.TranscribeRequestConfig|undefined} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
*/
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setS2tConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ondewo.csi.ControlMessageServiceParameters.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearS2tConfig = function() {
  return this.setS2tConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.hasS2tConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string transfer_id = 3;
 * @return {string}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getTransferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setTransferId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated bytes wav_files = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getWavFilesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes wav_files = 4;
 * This is a type-conversion wrapper around `getWavFilesList()`
 * @return {!Array<string>}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getWavFilesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getWavFilesList()));
};


/**
 * repeated bytes wav_files = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWavFilesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getWavFilesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getWavFilesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setWavFilesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.addWavFiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearWavFilesList = function() {
  return this.setWavFilesList([]);
};


/**
 * optional string text = 5;
 * @return {string}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ondewo.nlu.Context context = 6;
 * @return {?proto.ondewo.nlu.Context}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getContext = function() {
  return /** @type{?proto.ondewo.nlu.Context} */ (
    jspb.Message.getWrapperField(this, ondewo_nlu_context_pb.Context, 6));
};


/**
 * @param {?proto.ondewo.nlu.Context|undefined} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
*/
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.hasContext = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string session_id = 7;
 * @return {string}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string context_name = 8;
 * @return {string}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getContextName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setContextName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Condition condition_start = 9;
 * @return {?proto.ondewo.csi.Condition}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getConditionStart = function() {
  return /** @type{?proto.ondewo.csi.Condition} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.csi.Condition, 9));
};


/**
 * @param {?proto.ondewo.csi.Condition|undefined} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
*/
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setConditionStart = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearConditionStart = function() {
  return this.setConditionStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.hasConditionStart = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Condition condition_end = 10;
 * @return {?proto.ondewo.csi.Condition}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.getConditionEnd = function() {
  return /** @type{?proto.ondewo.csi.Condition} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.csi.Condition, 10));
};


/**
 * @param {?proto.ondewo.csi.Condition|undefined} value
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
*/
proto.ondewo.csi.ControlMessageServiceParameters.prototype.setConditionEnd = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessageServiceParameters} returns this
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.clearConditionEnd = function() {
  return this.setConditionEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessageServiceParameters.prototype.hasConditionEnd = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.csi.ControlMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.csi.ControlMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.csi.ControlMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parameters: (f = msg.getParameters()) && proto.ondewo.csi.ControlMessageServiceParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.csi.ControlMessage}
 */
proto.ondewo.csi.ControlMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.csi.ControlMessage;
  return proto.ondewo.csi.ControlMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.csi.ControlMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.csi.ControlMessage}
 */
proto.ondewo.csi.ControlMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ondewo.csi.ControlMessageServiceName} */ (reader.readEnum());
      msg.setService(value);
      break;
    case 2:
      var value = /** @type {!proto.ondewo.csi.ControlMessageServiceMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = new proto.ondewo.csi.ControlMessageServiceParameters;
      reader.readMessage(value,proto.ondewo.csi.ControlMessageServiceParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.csi.ControlMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.csi.ControlMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.csi.ControlMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.csi.ControlMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ondewo.csi.ControlMessageServiceParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional ControlMessageServiceName service = 1;
 * @return {!proto.ondewo.csi.ControlMessageServiceName}
 */
proto.ondewo.csi.ControlMessage.prototype.getService = function() {
  return /** @type {!proto.ondewo.csi.ControlMessageServiceName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlMessageServiceName} value
 * @return {!proto.ondewo.csi.ControlMessage} returns this
 */
proto.ondewo.csi.ControlMessage.prototype.setService = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ControlMessageServiceMethod method = 2;
 * @return {!proto.ondewo.csi.ControlMessageServiceMethod}
 */
proto.ondewo.csi.ControlMessage.prototype.getMethod = function() {
  return /** @type {!proto.ondewo.csi.ControlMessageServiceMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ondewo.csi.ControlMessageServiceMethod} value
 * @return {!proto.ondewo.csi.ControlMessage} returns this
 */
proto.ondewo.csi.ControlMessage.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ControlMessageServiceParameters parameters = 3;
 * @return {?proto.ondewo.csi.ControlMessageServiceParameters}
 */
proto.ondewo.csi.ControlMessage.prototype.getParameters = function() {
  return /** @type{?proto.ondewo.csi.ControlMessageServiceParameters} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.csi.ControlMessageServiceParameters, 3));
};


/**
 * @param {?proto.ondewo.csi.ControlMessageServiceParameters|undefined} value
 * @return {!proto.ondewo.csi.ControlMessage} returns this
*/
proto.ondewo.csi.ControlMessage.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.csi.ControlMessage} returns this
 */
proto.ondewo.csi.ControlMessage.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.csi.ControlMessage.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.ondewo.csi.ControlStatus = {
  OK: 0,
  EMERGENCY_STOP: 1,
  VAD_START_OF_SPEECH: 2
};

/**
 * @enum {number}
 */
proto.ondewo.csi.ControlMessageServiceName = {
  UNKNOWNNAME: 0,
  ONDEWO_S2T: 1,
  ONDEWO_T2S: 2,
  ONDEWO_NLU: 3,
  ONDEWO_SIP: 4,
  ONDEWO_VTSI: 5,
  ONDEWO_CSI: 6,
  ONDEWO_SURVEY: 7
};

/**
 * @enum {number}
 */
proto.ondewo.csi.ControlMessageServiceMethod = {
  UNKNOWNMETHOD: 0,
  UPDATE_CONFIG: 1,
  UNDO_CONFIG: 2,
  RESET_CONFIG: 3,
  END_CALL: 4,
  TRANSFER_CALL: 5,
  PLAY_WAV_FILES: 6,
  PLAY_TEXT: 7,
  MUTE: 8,
  UN_MUTE: 9,
  STOP_ALL_CONTROL_MESSAGES: 10,
  TRAIN_AGENT: 11,
  CANCEL_TRAIN_AGENT: 12,
  DELETE_SESSION: 13,
  DELETE_ALL_CONTEXTS: 14,
  CREATE_CONTEXT: 15,
  UPDATE_CONTEXT: 16,
  DELETE_CONTEXT: 17,
  DETECT_INTENT: 18
};

/**
 * @enum {number}
 */
proto.ondewo.csi.ConditionType = {
  UNKNOWTYPE: 0,
  IMMEDIATE: 1,
  DURATION: 2,
  DATETIME: 3,
  INTERACTIONS: 4
};

goog.object.extend(exports, proto.ondewo.csi);
